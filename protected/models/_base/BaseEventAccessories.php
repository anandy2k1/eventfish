<?php

/**
 * This is the model base class for the table "event_accessories".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "EventAccessories".
 *
 * Columns in table "event_accessories" available as properties of the model,
 * followed by relations of table "event_accessories" available as properties of the model.
 *
 * @property integer $id
 * @property integer $event_id
 * @property string $amazon_product_id
 * @property integer $qty
 * @property string $created_at
 * @property string $updated_at
 *
 * @property AmazonProducts $amazonProduct
 * @property Event $event
 */
abstract class BaseEventAccessories extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'event_accessories';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'EventAccessories|EventAccessories', $n);
	}

	public static function representingColumn() {
		return 'created_at';
	}

	public function rules() {
		return array(
			array('event_id, qty', 'numerical', 'integerOnly'=>true),
			array('amazon_product_id', 'length', 'max'=>20),
			array('created_at, updated_at', 'safe'),
			array('event_id, amazon_product_id, qty, created_at, updated_at', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, event_id, amazon_product_id, qty, created_at, updated_at', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'amazonProduct' => array(self::BELONGS_TO, 'AmazonProducts', 'amazon_product_id'),
			'event' => array(self::BELONGS_TO, 'Event', 'event_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'event_id' => null,
			'amazon_product_id' => null,
			'qty' => Yii::t('app', 'Qty'),
			'created_at' => Yii::t('app', 'Created At'),
			'updated_at' => Yii::t('app', 'Updated At'),
			'amazonProduct' => null,
			'event' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('event_id', $this->event_id);
		$criteria->compare('amazon_product_id', $this->amazon_product_id);
		$criteria->compare('qty', $this->qty);
		$criteria->compare('created_at', $this->created_at, true);
		$criteria->compare('updated_at', $this->updated_at, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}